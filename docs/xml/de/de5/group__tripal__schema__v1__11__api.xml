<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="de/de5/group__tripal__schema__v1__11__api" kind="group">
    <compoundname>tripal_schema_v1_11_api</compoundname>
    <title>Chado v1.11 Schema</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Provides an application programming interface (API) for describing Chado tables. This API consists of a set of functions, one for each table in Chado. Each function simply returns a Drupal style array that defines the table.</para><para>Because Drupal 6 does not handle foreign key (FK) relationships, which are needed to for Tripal Views, they have been added to the schema defintitions below.</para><para>The functions provided in this documentation should not be called as is, but if you need the Drupal-style array definition for any table, use the following function call:</para><para>$table_desc = chado_get_schema($table)</para><para>where the variable $table contains the name of the table you want to retireve. The chado_get_schema function determines the appropriate version of Chado and uses the Drupal hook infrastructure to call the appropriate hook function to retrieve the table schema.</para><para>If you need to augment these schema definitions within your own module, you need to implement the hook_chado_schema_v1_11_[table name]() hook where [table name] is the name of the chado table whose schema definition you want to augment. </para>    </detaileddescription>
  </compounddef>
</doxygen>

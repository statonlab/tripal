<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="de/d61/tripal_8fields_8api_8inc" kind="file" language="PHP">
    <compoundname>tripal.fields.api.inc</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="df/d0f/group__tripal__fields__api_1ga47ce54f169c677db85d0c2f0fa711054" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hook_bundle_fields_info</definition>
        <argsstring>($entity_type, $bundle)</argsstring>
        <name>hook_bundle_fields_info</name>
        <param>
          <declname>$entity_type</declname>
        </param>
        <param>
          <declname>$bundle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allows a module to return a bundles field info.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$entity_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the entity, like &apos;<ref refid="db/d44/classTripalEntity" kindref="compound">TripalEntity</ref>&apos;. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$bundle</parametername>
</parameternamelist>
<parameterdescription>
<para>The bundle object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal/api/tripal.fields.api.inc" line="93" column="1" bodyfile="tripal/api/tripal.fields.api.inc" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="df/d0f/group__tripal__fields__api_1ga776a3c15b005158009c518351ff77b38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hook_bundle_instances_info</definition>
        <argsstring>($entity_type, $bundle)</argsstring>
        <name>hook_bundle_instances_info</name>
        <param>
          <declname>$entity_type</declname>
        </param>
        <param>
          <declname>$bundle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allows a module to return the field instances of a bundle. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$entity_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the entity, most likely &apos;<ref refid="db/d44/classTripalEntity" kindref="compound">TripalEntity</ref>&apos;. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$bundle</parametername>
</parameternamelist>
<parameterdescription>
<para>The bundle object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal/api/tripal.fields.api.inc" line="106" column="1" bodyfile="tripal/api/tripal.fields.api.inc" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="df/d0f/group__tripal__fields__api_1ga1dc3d3d7722cf83f2384a5c679bb20b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hook_field_storage_tquery</definition>
        <argsstring>($conditions, $orderBy)</argsstring>
        <name>hook_field_storage_tquery</name>
        <param>
          <declname>$conditions</declname>
        </param>
        <param>
          <declname>$orderBy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal/api/tripal.fields.api.inc" line="79" column="1" bodyfile="tripal/api/tripal.fields.api.inc" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="df/d0f/group__tripal__fields__api_1gaa60dc49e374ff561fc236dcb9f409753" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tripal_format_views_field_element</definition>
        <argsstring>($field_name, $term)</argsstring>
        <name>tripal_format_views_field_element</name>
        <param>
          <declname>$field_name</declname>
        </param>
        <param>
          <declname>$term</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Formats an element of a <ref refid="d9/d83/classTripalField" kindref="compound">TripalField</ref> for use by Drupal Views.</para><para>Sometimes the value of <ref refid="d9/d83/classTripalField" kindref="compound">TripalField</ref> can be more than just a single scalar. In this case the value is an array of key value pairs where each key is a controlled vocabulary term. In order to support fields, filtering and sorting by these sub elements using Drupal Views, the <ref refid="d9/d83/classTripalField" kindref="compound">TripalField</ref> implementation must provide some help to Views by describing these elements, and then implementing a query() function to support them. However, the naming of sub elements must follow a set convention. This function guarantees proper naming for sub elements.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$field_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the field to which the element belongs. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$term</parametername>
</parameternamelist>
<parameterdescription>
<para>The term object as returned by <ref refid="de/d00/group__tripal__terms__api_1gaf99a705ba9ec49d8d1e46aa0300505c0" kindref="member">tripal_get_term_details()</ref>; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal/api/tripal.fields.api.inc" line="473" column="1" bodyfile="tripal/api/tripal.fields.api.inc" bodystart="473" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="de/d61/tripal_8fields_8api_8inc_1aad1792f746f1c668a90e0b227e227d7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tripal_get_field_field_formatters</definition>
        <argsstring>($field, $instance)</argsstring>
        <name>tripal_get_field_field_formatters</name>
        <param>
          <declname>$field</declname>
        </param>
        <param>
          <declname>$instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a list of field formatters compatible with a given field.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$field</parametername>
</parameternamelist>
<parameterdescription>
<para>A field array as returned by the field_info_field() function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$instance</parametername>
</parameternamelist>
<parameterdescription>
<para>A field instance array. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of file formatter class names. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal/api/tripal.fields.api.inc" line="245" column="1" bodyfile="tripal/api/tripal.fields.api.inc" bodystart="245" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="df/d0f/group__tripal__fields__api_1ga5fd1f3f1f01539ca3e1aa7068c4cfa44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tripal_get_field_formatters</definition>
        <argsstring>()</argsstring>
        <name>tripal_get_field_formatters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a list of TripalFieldFormatters.</para><para>The <ref refid="df/d84/classTripalFieldFormatter" kindref="compound">TripalFieldFormatter</ref> classes can be added by a site developer and should be placed in the [module]/includes/TripalFields directory. Tripal will support any widget as long as it is in this directory and extends the <ref refid="df/d84/classTripalFieldFormatter" kindref="compound">TripalFieldFormatter</ref> class.</para><para><simplesect kind="return"><para>A list of <ref refid="df/d84/classTripalFieldFormatter" kindref="compound">TripalFieldFormatter</ref> names. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal/api/tripal.fields.api.inc" line="284" column="1" bodyfile="tripal/api/tripal.fields.api.inc" bodystart="284" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="df/d0f/group__tripal__fields__api_1ga3bbf7162eadbfbf0bcbe9912c6306cc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tripal_get_field_item_keyval</definition>
        <argsstring>($items, $delta, $key, $default=&apos;&apos;)</argsstring>
        <name>tripal_get_field_item_keyval</name>
        <param>
          <declname>$items</declname>
        </param>
        <param>
          <declname>$delta</declname>
        </param>
        <param>
          <declname>$key</declname>
        </param>
        <param>
          <declname>$default</declname>
          <defval>&apos;&apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>More easily get the value of a single item from a field&apos;s items array.</para><para>A Drupal field attached to an entity may have multiple items (i.e. it has a cardinality &gt; 1). Each of these items will always have a &apos;value&apos; key that contains the data for that field. However, fields can also have other keys with their own values. You can easily retreive the value of these keys using this function. What makes this function useful is that you can provide a default value to use if the key has no value. This is useful when developing a TripalField::widgetForm function and you need to retreive default values and you don&apos;t want to have to always check if the value is set.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$items</parametername>
</parameternamelist>
<parameterdescription>
<para>The fields $items array. Compatbile with that returned by field_get_items. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$delta</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the item.  $key The name of the key within the item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$default</parametername>
</parameternamelist>
<parameterdescription>
<para>A default value to return if the key is not set. By default the empty string is returned.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value assigned to the item&apos;s key; FALSE if the key doesn&apos;t exist or the $default argument if no value is associated with the key. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal/api/tripal.fields.api.inc" line="441" column="1" bodyfile="tripal/api/tripal.fields.api.inc" bodystart="441" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="df/d0f/group__tripal__fields__api_1gaeea3e5fc278ccd89ce3cada7a6634761" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tripal_get_field_types</definition>
        <argsstring>()</argsstring>
        <name>tripal_get_field_types</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a list of <ref refid="d9/d83/classTripalField" kindref="compound">TripalField</ref> types.</para><para>The <ref refid="d9/d83/classTripalField" kindref="compound">TripalField</ref> classes can be added by a site developer and should be placed in the [module]/includes/TripalFields directory. Tripal will support any field as long as it is in this directory and extends the <ref refid="d9/d83/classTripalField" kindref="compound">TripalField</ref> class. To support dynamic inclusion of new fields this function will look for <ref refid="d9/d83/classTripalField" kindref="compound">TripalField</ref> class files and return a type for each one.</para><para><simplesect kind="return"><para>A list of <ref refid="d9/d83/classTripalField" kindref="compound">TripalField</ref> names. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal/api/tripal.fields.api.inc" line="125" column="1" bodyfile="tripal/api/tripal.fields.api.inc" bodystart="125" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="df/d0f/group__tripal__fields__api_1gaa59ad72e57a9ccc3157b0e8c2e2f5db1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tripal_get_field_widgets</definition>
        <argsstring>()</argsstring>
        <name>tripal_get_field_widgets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a list of TripalFieldWidgets.</para><para>The <ref refid="db/d4c/classTripalFieldWidget" kindref="compound">TripalFieldWidget</ref> classes can be added by a site developer and should be placed in the [module]/includes/TripalFields directory. Tripal will support any widget as long as it is in this directory and extends the <ref refid="db/d4c/classTripalFieldWidget" kindref="compound">TripalFieldWidget</ref> class.</para><para><simplesect kind="return"><para>A list of <ref refid="db/d4c/classTripalFieldWidget" kindref="compound">TripalFieldWidget</ref> names. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal/api/tripal.fields.api.inc" line="189" column="1" bodyfile="tripal/api/tripal.fields.api.inc" bodystart="189" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="df/d0f/group__tripal__fields__api_1ga6228dd432f683e12dd97639bbc848314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tripal_load_include_downloader_class</definition>
        <argsstring>($class)</argsstring>
        <name>tripal_load_include_downloader_class</name>
        <param>
          <declname>$class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Loads the TripalEntityDownloader file into scope.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$class</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the class to include.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if the downloader class file was found, FALSE otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal/api/tripal.fields.api.inc" line="383" column="1" bodyfile="tripal/api/tripal.fields.api.inc" bodystart="383" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="df/d0f/group__tripal__fields__api_1gabb7ea3717ca825f758cfa9eb5c259ac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tripal_load_include_field_class</definition>
        <argsstring>($class)</argsstring>
        <name>tripal_load_include_field_class</name>
        <param>
          <declname>$class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Loads the <ref refid="d9/d83/classTripalField" kindref="compound">TripalField</ref> class file into scope.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$class</parametername>
</parameternamelist>
<parameterdescription>
<para>The class to include. This can be a <ref refid="d9/d83/classTripalField" kindref="compound">TripalField</ref>, <ref refid="db/d4c/classTripalFieldWidget" kindref="compound">TripalFieldWidget</ref> or <ref refid="df/d84/classTripalFieldFormatter" kindref="compound">TripalFieldFormatter</ref> class name.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if the field type class file was found, FALSE otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal/api/tripal.fields.api.inc" line="341" column="1" bodyfile="tripal/api/tripal.fields.api.inc" bodystart="341" bodyend="370"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Provides an application programming interface (API) for working with fields attached to <ref refid="db/d44/classTripalEntity" kindref="compound">TripalEntity</ref> content types (bundles). </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">&lt;?php</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="df/d0f/group__tripal__fields__api_1ga1dc3d3d7722cf83f2384a5c679bb20b0" refkind="member"><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="df/d0f/group__tripal__fields__api_1ga1dc3d3d7722cf83f2384a5c679bb20b0" kindref="member">hook_field_storage_tquery</ref>($conditions,<sp/>$orderBy)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>tripal_chado_field_storage_tquery()<sp/>function<sp/>for<sp/>an<sp/>example.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="df/d0f/group__tripal__fields__api_1ga47ce54f169c677db85d0c2f0fa711054" refkind="member"><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="df/d0f/group__tripal__fields__api_1ga47ce54f169c677db85d0c2f0fa711054" kindref="member">hook_bundle_fields_info</ref>($entity_type,<sp/>$bundle)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="df/d0f/group__tripal__fields__api_1ga776a3c15b005158009c518351ff77b38" refkind="member"><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="df/d0f/group__tripal__fields__api_1ga776a3c15b005158009c518351ff77b38" kindref="member">hook_bundle_instances_info</ref>($entity_type,<sp/>$bundle)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="df/d0f/group__tripal__fields__api_1gaeea3e5fc278ccd89ce3cada7a6634761" refkind="member"><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="df/d0f/group__tripal__fields__api_1gaeea3e5fc278ccd89ce3cada7a6634761" kindref="member">tripal_get_field_types</ref>()<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="da/df3/tripal__organism__feature__counts_8tpl_8php_1a92d70a97331cc6fc0a79d9da50895be8" kindref="member">$types</ref><sp/>=<sp/>array();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>$modules<sp/>=<sp/>module_list(TRUE);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>($modules<sp/>as<sp/>$module)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>run<sp/>this<sp/>for<sp/>modules<sp/>that<sp/>are<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!module_exists($module))<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>all<sp/>of<sp/>the<sp/>files<sp/>in<sp/>the<sp/>tripal_chado/includes/TripalFields/<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>$fields_path<sp/>=<sp/>drupal_get_path(</highlight><highlight class="stringliteral">&apos;module&apos;</highlight><highlight class="normal">,<sp/>$module)<sp/>.<sp/></highlight><highlight class="stringliteral">&apos;/includes/TripalFields&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>$field_files<sp/>=<sp/>file_scan_directory($fields_path,<sp/></highlight><highlight class="stringliteral">&apos;/.*\.inc$/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>through<sp/>the<sp/>fields,<sp/>include<sp/>the<sp/>file<sp/>and<sp/>run<sp/>the<sp/>info<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>($field_files<sp/>as<sp/>$file)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>the<sp/>formatter<sp/>and<sp/>widget<sp/>classes<sp/>for<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preg_match(</highlight><highlight class="stringliteral">&apos;/_formatter|_widget/&apos;</highlight><highlight class="normal">,<sp/>$file-&gt;name))<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>$field_type<sp/>=<sp/>$file-&gt;name;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>module_load_include(</highlight><highlight class="stringliteral">&apos;inc&apos;</highlight><highlight class="normal">,<sp/>$module,<sp/></highlight><highlight class="stringliteral">&apos;includes/TripalFields/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$field_type<sp/>.<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$field_type);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_exists($field_type)<sp/>and<sp/>is_subclass_of($field_type,<sp/></highlight><highlight class="stringliteral">&apos;TripalField&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/df3/tripal__organism__feature__counts_8tpl_8php_1a92d70a97331cc6fc0a79d9da50895be8" kindref="member">$types</ref>[]<sp/>=<sp/>$field_type;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>libraries<sp/>module<sp/>is<sp/>enabled<sp/>then<sp/>we<sp/>want<sp/>to<sp/>look<sp/>for<sp/>a<sp/>TripalFields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>library<sp/>folder<sp/>and<sp/>see<sp/>if<sp/>our<sp/>field<sp/>exist<sp/>there.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(module_exists(</highlight><highlight class="stringliteral">&apos;libraries&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>$library_path<sp/>=<sp/>libraries_get_path(</highlight><highlight class="stringliteral">&apos;TripalFields&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>$fields_path<sp/>=<sp/>realpath(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>.<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$library_path;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>$field_files<sp/>=<sp/>file_scan_directory($fields_path,<sp/></highlight><highlight class="stringliteral">&apos;/.*\.inc$/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>($field_files<sp/>as<sp/>$file)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>the<sp/>formatter<sp/>and<sp/>widget<sp/>classes<sp/>for<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preg_match(</highlight><highlight class="stringliteral">&apos;/_formatter|_widget/&apos;</highlight><highlight class="normal">,<sp/>$file-&gt;name))<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>$field_type<sp/>=<sp/>$file-&gt;name;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>$file_path<sp/>=<sp/>realpath(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>.<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$library_path<sp/>.</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$field_type<sp/>.<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$field_type<sp/>.<sp/></highlight><highlight class="stringliteral">&apos;.inc&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file_exists($file_path))<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>require_once($file_path);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_exists($field_type)<sp/>and<sp/>is_subclass_of($field_type,<sp/></highlight><highlight class="stringliteral">&apos;TripalField&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/df3/tripal__organism__feature__counts_8tpl_8php_1a92d70a97331cc6fc0a79d9da50895be8" kindref="member">$types</ref>[]<sp/>=<sp/>$field_type;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/df3/tripal__organism__feature__counts_8tpl_8php_1a92d70a97331cc6fc0a79d9da50895be8" kindref="member">$types</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="df/d0f/group__tripal__fields__api_1gaa59ad72e57a9ccc3157b0e8c2e2f5db1" refkind="member"><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="df/d0f/group__tripal__fields__api_1gaa59ad72e57a9ccc3157b0e8c2e2f5db1" kindref="member">tripal_get_field_widgets</ref>()<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>$widgets<sp/>=<sp/>array();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>$modules<sp/>=<sp/>module_list(TRUE);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>($modules<sp/>as<sp/>$module)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>run<sp/>this<sp/>for<sp/>modules<sp/>that<sp/>are<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!module_exists($module))<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>all<sp/>of<sp/>the<sp/>files<sp/>in<sp/>the<sp/>tripal_chado/includes/fields<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>$fields_path<sp/>=<sp/>drupal_get_path(</highlight><highlight class="stringliteral">&apos;module&apos;</highlight><highlight class="normal">,<sp/>$module)<sp/>.<sp/></highlight><highlight class="stringliteral">&apos;/includes/TripalFields&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>$field_files<sp/>=<sp/>file_scan_directory($fields_path,<sp/></highlight><highlight class="stringliteral">&apos;/.*_widget\.inc$/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>through<sp/>the<sp/>fields,<sp/>include<sp/>the<sp/>file<sp/>and<sp/>run<sp/>the<sp/>info<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>($field_files<sp/>as<sp/>$file)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>$widget_type<sp/>=<sp/>$file-&gt;name;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>$field_type<sp/>=<sp/>preg_replace(</highlight><highlight class="stringliteral">&apos;/(^.*)_widget/&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;$1&apos;</highlight><highlight class="normal">,<sp/>$widget_type);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>module_load_include(</highlight><highlight class="stringliteral">&apos;inc&apos;</highlight><highlight class="normal">,<sp/>$module,<sp/></highlight><highlight class="stringliteral">&apos;includes/TripalFields/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$field_type<sp/>.<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$widget_type);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_exists($widget_type)<sp/>and<sp/>is_subclass_of($widget_type,<sp/></highlight><highlight class="stringliteral">&apos;TripalFieldWidget&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$widgets[]<sp/>=<sp/>$widget_type;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>libraries<sp/>module<sp/>is<sp/>enabled<sp/>then<sp/>we<sp/>want<sp/>to<sp/>look<sp/>for<sp/>a<sp/>TripalFields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>library<sp/>folder<sp/>and<sp/>see<sp/>if<sp/>our<sp/>field<sp/>exist<sp/>there.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(module_exists(</highlight><highlight class="stringliteral">&apos;libraries&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>$library_path<sp/>=<sp/>libraries_get_path(</highlight><highlight class="stringliteral">&apos;TripalFields&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>$fields_path<sp/>=<sp/>realpath(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>.<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$library_path;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>$field_files<sp/>=<sp/>file_scan_directory($fields_path,<sp/></highlight><highlight class="stringliteral">&apos;/.*_widget\.inc$/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>($field_files<sp/>as<sp/>$file)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>$widget_type<sp/>=<sp/>$file-&gt;name;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>$field_type<sp/>=<sp/>preg_replace(</highlight><highlight class="stringliteral">&apos;/(^.*)_widget/&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;$1&apos;</highlight><highlight class="normal">,<sp/>$widget_type);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>$file_path<sp/>=<sp/>realpath(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>.<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$library_path<sp/>.</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$field_type<sp/>.<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$widget_type<sp/>.<sp/></highlight><highlight class="stringliteral">&apos;.inc&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file_exists($file_path))<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>require_once($file_path);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_exists($widget_type)<sp/>and<sp/>is_subclass_of($widget_type,<sp/></highlight><highlight class="stringliteral">&apos;TripalFieldWidget&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$widgets[]<sp/>=<sp/>$widget_type;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$widgets;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="de/d61/tripal_8fields_8api_8inc_1aad1792f746f1c668a90e0b227e227d7d" refkind="member"><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="de/d61/tripal_8fields_8api_8inc_1aad1792f746f1c668a90e0b227e227d7d" kindref="member">tripal_get_field_field_formatters</ref>($field,<sp/>$instance)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>$field_name<sp/>=<sp/>$field[</highlight><highlight class="stringliteral">&apos;field_name&apos;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>$field_type<sp/>=<sp/>$field[</highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>$downloaders<sp/>=<sp/>array();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>field<sp/>type<sp/>is<sp/>a<sp/>TripalField<sp/>then<sp/>get<sp/>information<sp/>about<sp/>the<sp/>formatter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="df/d0f/group__tripal__fields__api_1gabb7ea3717ca825f758cfa9eb5c259ac0" kindref="member">tripal_load_include_field_class</ref>($field_type))<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>$formatters<sp/>=<sp/>$field_type::$download_formatters;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>($formatters<sp/>as<sp/>$class_name)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!array_key_exists($class_name,<sp/>$downloaders))<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d0f/group__tripal__fields__api_1ga6228dd432f683e12dd97639bbc848314" kindref="member">tripal_load_include_downloader_class</ref>($class_name);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$downloaders[$class_name]<sp/>=<sp/>$class_name::$full_label;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>non<sp/>TripalFields<sp/>we&apos;ll<sp/>assume<sp/>TAB<sp/>and<sp/>CSV.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d0f/group__tripal__fields__api_1ga6228dd432f683e12dd97639bbc848314" kindref="member">tripal_load_include_downloader_class</ref>(</highlight><highlight class="stringliteral">&apos;TripalTabDownloader&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d0f/group__tripal__fields__api_1ga6228dd432f683e12dd97639bbc848314" kindref="member">tripal_load_include_downloader_class</ref>(</highlight><highlight class="stringliteral">&apos;TripalCSVDownloader&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>$downloaders[</highlight><highlight class="stringliteral">&apos;TripalTabDownloader&apos;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="d5/db9/classTripalTabDownloader_1a7a414962f13e547c4a9a12dc8ec15ad6" kindref="member">TripalTabDownloader::$full_label</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>$downloaders[</highlight><highlight class="stringliteral">&apos;TripalCSVDownloader&apos;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="d5/dde/classTripalCSVDownloader_1a06a654654767e324c1b779912319b33d" kindref="member">TripalCSVDownloader::$full_label</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$downloaders;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="df/d0f/group__tripal__fields__api_1ga5fd1f3f1f01539ca3e1aa7068c4cfa44" refkind="member"><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="df/d0f/group__tripal__fields__api_1ga5fd1f3f1f01539ca3e1aa7068c4cfa44" kindref="member">tripal_get_field_formatters</ref>()<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>$formatters<sp/>=<sp/>array();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>$modules<sp/>=<sp/>module_list(TRUE);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>($modules<sp/>as<sp/>$module)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>run<sp/>this<sp/>for<sp/>modules<sp/>that<sp/>are<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!module_exists($module))<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>all<sp/>of<sp/>the<sp/>files<sp/>in<sp/>the<sp/>tripal_chado/includes/fields<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>$fields_path<sp/>=<sp/>drupal_get_path(</highlight><highlight class="stringliteral">&apos;module&apos;</highlight><highlight class="normal">,<sp/>$module)<sp/>.<sp/></highlight><highlight class="stringliteral">&apos;/includes/TripalFields&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>$field_files<sp/>=<sp/>file_scan_directory($fields_path,<sp/></highlight><highlight class="stringliteral">&apos;/.*_formatter\.inc$/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>through<sp/>the<sp/>fields,<sp/>include<sp/>the<sp/>file<sp/>and<sp/>run<sp/>the<sp/>info<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>($field_files<sp/>as<sp/>$file)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>$formatter_type<sp/>=<sp/>$file-&gt;name;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>$field_type<sp/>=<sp/>preg_replace(</highlight><highlight class="stringliteral">&apos;/(^.*)_formatter/&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;$1&apos;</highlight><highlight class="normal">,<sp/>$formatter_type);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>module_load_include(</highlight><highlight class="stringliteral">&apos;inc&apos;</highlight><highlight class="normal">,<sp/>$module,<sp/></highlight><highlight class="stringliteral">&apos;includes/TripalFields/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$field_type<sp/>.<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$formatter_type);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_exists($formatter_type)<sp/>and<sp/>is_subclass_of($formatter_type,<sp/></highlight><highlight class="stringliteral">&apos;TripalFieldFormatter&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$formatters[]<sp/>=<sp/>$formatter_type;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>libraries<sp/>module<sp/>is<sp/>enabled<sp/>then<sp/>we<sp/>want<sp/>to<sp/>look<sp/>for<sp/>a<sp/>TripalFields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>library<sp/>folder<sp/>and<sp/>see<sp/>if<sp/>our<sp/>field<sp/>exist<sp/>there.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(module_exists(</highlight><highlight class="stringliteral">&apos;libraries&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>$library_path<sp/>=<sp/>libraries_get_path(</highlight><highlight class="stringliteral">&apos;TripalFields&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>$fields_path<sp/>=<sp/>realpath(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>.<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$library_path;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>$field_files<sp/>=<sp/>file_scan_directory($fields_path,<sp/></highlight><highlight class="stringliteral">&apos;/.*_formatter\.inc$/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>($field_files<sp/>as<sp/>$file)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>$formatter_type<sp/>=<sp/>$file-&gt;name;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>$field_type<sp/>=<sp/>preg_replace(</highlight><highlight class="stringliteral">&apos;/(^.*)_formatter/&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;$1&apos;</highlight><highlight class="normal">,<sp/>$formatter_type);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>$file_path<sp/>=<sp/>realpath(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>.<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$library_path<sp/>.</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$field_type<sp/>.<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$formatter_type<sp/>.<sp/></highlight><highlight class="stringliteral">&apos;.inc&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file_exists($file_path))<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>require_once($file_path);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_exists($formatter_type)<sp/>and<sp/>is_subclass_of($formatter_type,<sp/></highlight><highlight class="stringliteral">&apos;TripalFieldFormatter&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$formatters[]<sp/>=<sp/>$formatter_type;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$formatters;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341" refid="df/d0f/group__tripal__fields__api_1gabb7ea3717ca825f758cfa9eb5c259ac0" refkind="member"><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="df/d0f/group__tripal__fields__api_1gabb7ea3717ca825f758cfa9eb5c259ac0" kindref="member">tripal_load_include_field_class</ref>($class)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>$modules<sp/>=<sp/>module_list(TRUE);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>($modules<sp/>as<sp/>$module)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>$field_type<sp/>=<sp/>preg_replace(</highlight><highlight class="stringliteral">&apos;/(^.*)_(formatter|widget)/&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;$1&apos;</highlight><highlight class="normal">,<sp/>$class);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>$file_path<sp/>=<sp/>realpath(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>.<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>drupal_get_path(</highlight><highlight class="stringliteral">&apos;module&apos;</highlight><highlight class="normal">,<sp/>$module)<sp/>.<sp/></highlight><highlight class="stringliteral">&apos;/includes/TripalFields/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$field_type<sp/>.<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$class<sp/>.<sp/></highlight><highlight class="stringliteral">&apos;.inc&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file_exists($file_path))<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>module_load_include(</highlight><highlight class="stringliteral">&apos;inc&apos;</highlight><highlight class="normal">,<sp/>$module,<sp/></highlight><highlight class="stringliteral">&apos;includes/TripalFields/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$field_type<sp/>.<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$class);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_exists($class))<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>libraries<sp/>module<sp/>is<sp/>enabled<sp/>then<sp/>we<sp/>want<sp/>to<sp/>look<sp/>for<sp/>a<sp/>TripalFields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>library<sp/>folder<sp/>and<sp/>see<sp/>if<sp/>our<sp/>field<sp/>exist<sp/>there.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(module_exists(</highlight><highlight class="stringliteral">&apos;libraries&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>$library_path<sp/>=<sp/>libraries_get_path(</highlight><highlight class="stringliteral">&apos;TripalFields&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>$field_type<sp/>=<sp/>preg_replace(</highlight><highlight class="stringliteral">&apos;/(^.*)_(formatter|widget)/&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;$1&apos;</highlight><highlight class="normal">,<sp/>$class);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>$file_path<sp/>=<sp/>realpath(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>.<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$library_path<sp/>.</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$field_type<sp/>.<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$class<sp/>.<sp/></highlight><highlight class="stringliteral">&apos;.inc&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file_exists($file_path))<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>require_once($file_path);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_exists($class))<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="df/d0f/group__tripal__fields__api_1ga6228dd432f683e12dd97639bbc848314" refkind="member"><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="df/d0f/group__tripal__fields__api_1ga6228dd432f683e12dd97639bbc848314" kindref="member">tripal_load_include_downloader_class</ref>($class)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>$modules<sp/>=<sp/>module_list(TRUE);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>($modules<sp/>as<sp/>$module)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>$file_path<sp/>=<sp/>realpath(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>.<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>drupal_get_path(</highlight><highlight class="stringliteral">&apos;module&apos;</highlight><highlight class="normal">,<sp/>$module)<sp/>.<sp/></highlight><highlight class="stringliteral">&apos;/includes/TripalFieldDownloaders/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$class<sp/>.<sp/></highlight><highlight class="stringliteral">&apos;.inc&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file_exists($file_path))<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>module_load_include(</highlight><highlight class="stringliteral">&apos;inc&apos;</highlight><highlight class="normal">,<sp/>$module,<sp/></highlight><highlight class="stringliteral">&apos;includes/TripalFieldDownloaders/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$class);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_exists($class))<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>libraries<sp/>module<sp/>is<sp/>enabled<sp/>then<sp/>we<sp/>want<sp/>to<sp/>look<sp/>for<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TripalFieldDownloader<sp/>library<sp/>folder<sp/>and<sp/>see<sp/>if<sp/>our<sp/>field<sp/>exist<sp/>there.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(module_exists(</highlight><highlight class="stringliteral">&apos;libraries&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>$library_path<sp/>=<sp/>libraries_get_path(</highlight><highlight class="stringliteral">&apos;TripalFieldDownloaders&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>$file_path<sp/>=<sp/>realpath(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>.<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$library_path<sp/>.</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>.<sp/>$class<sp/>.<sp/></highlight><highlight class="stringliteral">&apos;.inc&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file_exists($file_path))<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>require_once($file_path);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_exists($class))<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="df/d0f/group__tripal__fields__api_1ga3bbf7162eadbfbf0bcbe9912c6306cc2" refkind="member"><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="df/d0f/group__tripal__fields__api_1ga3bbf7162eadbfbf0bcbe9912c6306cc2" kindref="member">tripal_get_field_item_keyval</ref>($items,<sp/>$delta,<sp/>$key,<sp/>$default=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!array_key_exists($delta,<sp/>$items))<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!array_key_exists($key,<sp/>$items[$delta]))<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!$items[$delta][$key])<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$default;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$items[$delta][$key];</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="473" refid="df/d0f/group__tripal__fields__api_1gaa60dc49e374ff561fc236dcb9f409753" refkind="member"><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="df/d0f/group__tripal__fields__api_1gaa60dc49e374ff561fc236dcb9f409753" kindref="member">tripal_format_views_field_element</ref>($field_name,<sp/>$term)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>$element_name<sp/>=<sp/>$term[</highlight><highlight class="stringliteral">&apos;vocabulary&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;short_name&apos;</highlight><highlight class="normal">]<sp/>.<sp/></highlight><highlight class="stringliteral">&apos;__&apos;</highlight><highlight class="normal"><sp/>.<sp/>$term[</highlight><highlight class="stringliteral">&apos;accession&apos;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$field_name<sp/>.<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>.<sp/>$element_name;</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="tripal/api/tripal.fields.api.inc"/>
  </compounddef>
</doxygen>

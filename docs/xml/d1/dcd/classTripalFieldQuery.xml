<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="d1/dcd/classTripalFieldQuery" kind="class" language="PHP" prot="public">
    <compoundname>TripalFieldQuery</compoundname>
    <basecompoundref prot="public" virt="non-virtual">EntityFieldQuery</basecompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d1/dcd/classTripalFieldQuery_1ad6e92cf40ecb918ac9f95179278d1981" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>TripalFieldQuery::$includes</definition>
        <argsstring></argsstring>
        <name>$includes</name>
        <initializer>= array()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Holds a list of fields that should be included in the results </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal/includes/TripalFieldQuery.inc" line="12" column="1" bodyfile="tripal/includes/TripalFieldQuery.inc" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d1/dcd/classTripalFieldQuery_1a190ea0d6149144b9b3b6c8809d007bad" prot="public" static="no" mutable="no">
        <type></type>
        <definition>TripalFieldQuery::$relationshipConditions</definition>
        <argsstring></argsstring>
        <name>$relationshipConditions</name>
        <initializer>= []</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal/includes/TripalFieldQuery.inc" line="24" column="1" bodyfile="tripal/includes/TripalFieldQuery.inc" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/dcd/classTripalFieldQuery_1aedf73d1819690960f0e37a644ca088e8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>TripalFieldQuery::$relationships</definition>
        <argsstring></argsstring>
        <name>$relationships</name>
        <initializer>= []</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>These member variables keep track of join relationships with the tripal_entity table. This is useful for non Tripal Storage API fields that want to filter based on on other Drupal tables. The most important example for this would be Drupal Views. These variables are only meant to be used by the <ref refid="da/d09/tripal_8field__storage_8inc_1a513f491c1f87dd186546b8beea89112f" kindref="member">tripal_field_storage_query()</ref> function as that is the only storage system that should be doing quries on the tripal_entity table itself. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal/includes/TripalFieldQuery.inc" line="23" column="1" bodyfile="tripal/includes/TripalFieldQuery.inc" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d1/dcd/classTripalFieldQuery_1ab6123f28774c0f0262e4ffcaa382ae99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TripalFieldQuery::addRelationship</definition>
        <argsstring>($table, $alias, $field)</argsstring>
        <name>addRelationship</name>
        <param>
          <declname>$table</declname>
        </param>
        <param>
          <declname>$alias</declname>
        </param>
        <param>
          <declname>$field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a relationsihp via a table join to the tripal_entity table</para><para>This is specific for Drupal schema tables and is useful for Views integration when non Tripal Storage API fields are attached to an entity.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$table</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the table to join. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$alias</parametername>
</parameternamelist>
<parameterdescription>
<para>The alias for the table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$field</parametername>
</parameternamelist>
<parameterdescription>
<para>The field to join on. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal/includes/TripalFieldQuery.inc" line="39" column="1" bodyfile="tripal/includes/TripalFieldQuery.inc" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="d1/dcd/classTripalFieldQuery_1a278375a664dc48c8ca37006463d1b142" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TripalFieldQuery::execute</definition>
        <argsstring>()</argsstring>
        <name>execute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overrides the EntityFieldQuery::execute() function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal/includes/TripalFieldQuery.inc" line="72" column="1" bodyfile="tripal/includes/TripalFieldQuery.inc" bodystart="72" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="d1/dcd/classTripalFieldQuery_1a11544c405effe6d7bab215f6653aaaaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TripalFieldQuery::queryCallback</definition>
        <argsstring>()</argsstring>
        <name>queryCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overides the EntityFieldQuery::queryCallback function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal/includes/TripalFieldQuery.inc" line="164" column="1" bodyfile="tripal/includes/TripalFieldQuery.inc" bodystart="164" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="d1/dcd/classTripalFieldQuery_1a39ddc1573671bc51b30c16c12a98cc7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TripalFieldQuery::relationshipCondition</definition>
        <argsstring>($table, $field, $value, $op)</argsstring>
        <name>relationshipCondition</name>
        <param>
          <declname>$table</declname>
        </param>
        <param>
          <declname>$field</declname>
        </param>
        <param>
          <declname>$value</declname>
        </param>
        <param>
          <declname>$op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a where statement to a relationship.</para><para>The relationship is added by the $table </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal/includes/TripalFieldQuery.inc" line="50" column="1" bodyfile="tripal/includes/TripalFieldQuery.inc" bodystart="50" bodyend="67"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d1/dcd/classTripalFieldQuery_1a9bfde9919ae9cf38a9845cd2173e85ba" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TripalFieldQuery::_intersectResults</definition>
        <argsstring>($current_results, $new_results)</argsstring>
        <name>_intersectResults</name>
        <param>
          <declname>$current_results</declname>
        </param>
        <param>
          <declname>$new_results</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generates an intersection of results from different storage back-ends. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal/includes/TripalFieldQuery.inc" line="129" column="1" bodyfile="tripal/includes/TripalFieldQuery.inc" bodystart="129" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="d1/dcd/classTripalFieldQuery_1af35000195f9186aed3272eea15d80a41" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TripalFieldQuery::queryStorageCallback</definition>
        <argsstring>($storage)</argsstring>
        <name>queryStorageCallback</name>
        <param>
          <declname>$storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determines the query callback to use for this entity query.</para><para>This function is a replacement for <ref refid="d1/dcd/classTripalFieldQuery_1a11544c405effe6d7bab215f6653aaaaa" kindref="member">queryCallback()</ref> from the parent EntityFieldQuery class because that class only allows a single storage type per query.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$storage</parametername>
</parameternamelist>
<parameterdescription>
<para>The storage module</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>EntityFieldQueryException</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A callback that can be used with call_user_func(). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal/includes/TripalFieldQuery.inc" line="215" column="1" bodyfile="tripal/includes/TripalFieldQuery.inc" bodystart="215" bodyend="236"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Extends the EntityFieldQuery to support queries from multiple storage types. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1042">
        <label>TripalFieldQuery</label>
        <link refid="d1/dcd/classTripalFieldQuery"/>
        <childnode refid="1043" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1043">
        <label>EntityFieldQuery</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1044">
        <label>TripalFieldQuery</label>
        <link refid="d1/dcd/classTripalFieldQuery"/>
        <childnode refid="1045" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1045">
        <label>EntityFieldQuery</label>
      </node>
    </collaborationgraph>
    <location file="tripal/includes/TripalFieldQuery.inc" line="7" column="1" bodyfile="tripal/includes/TripalFieldQuery.inc" bodystart="7" bodyend="237"/>
    <listofallmembers>
      <member refid="d1/dcd/classTripalFieldQuery_1ad6e92cf40ecb918ac9f95179278d1981" prot="protected" virt="non-virtual"><scope>TripalFieldQuery</scope><name>$includes</name></member>
      <member refid="d1/dcd/classTripalFieldQuery_1a190ea0d6149144b9b3b6c8809d007bad" prot="public" virt="non-virtual"><scope>TripalFieldQuery</scope><name>$relationshipConditions</name></member>
      <member refid="d1/dcd/classTripalFieldQuery_1aedf73d1819690960f0e37a644ca088e8" prot="public" virt="non-virtual"><scope>TripalFieldQuery</scope><name>$relationships</name></member>
      <member refid="d1/dcd/classTripalFieldQuery_1a9bfde9919ae9cf38a9845cd2173e85ba" prot="protected" virt="non-virtual"><scope>TripalFieldQuery</scope><name>_intersectResults</name></member>
      <member refid="d1/dcd/classTripalFieldQuery_1ab6123f28774c0f0262e4ffcaa382ae99" prot="public" virt="non-virtual"><scope>TripalFieldQuery</scope><name>addRelationship</name></member>
      <member refid="d1/dcd/classTripalFieldQuery_1a278375a664dc48c8ca37006463d1b142" prot="public" virt="non-virtual"><scope>TripalFieldQuery</scope><name>execute</name></member>
      <member refid="d1/dcd/classTripalFieldQuery_1a11544c405effe6d7bab215f6653aaaaa" prot="public" virt="non-virtual"><scope>TripalFieldQuery</scope><name>queryCallback</name></member>
      <member refid="d1/dcd/classTripalFieldQuery_1af35000195f9186aed3272eea15d80a41" prot="protected" virt="non-virtual"><scope>TripalFieldQuery</scope><name>queryStorageCallback</name></member>
      <member refid="d1/dcd/classTripalFieldQuery_1a39ddc1573671bc51b30c16c12a98cc7c" prot="public" virt="non-virtual"><scope>TripalFieldQuery</scope><name>relationshipCondition</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

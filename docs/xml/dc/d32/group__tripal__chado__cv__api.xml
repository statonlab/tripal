<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="dc/d32/group__tripal__chado__cv__api" kind="group">
    <compoundname>tripal_chado_cv_api</compoundname>
    <title>Chado CV</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="dc/d32/group__tripal__chado__cv__api_1ga1800ff63fb563e08c2e25c834e202abc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_chado_update_cvtermpath_loop</definition>
        <argsstring>( $origin, $child_id, $cv_id, $type_id, $depth, $increment_of_depth, $tree_path, $possible_loop, $matched_rows, $possible_start_of_loop, $no_loop_skip_test)</argsstring>
        <name>_chado_update_cvtermpath_loop</name>
        <param>
          <declname>$origin</declname>
        </param>
        <param>
          <declname>$child_id</declname>
        </param>
        <param>
          <declname>$cv_id</declname>
        </param>
        <param>
          <declname>$type_id</declname>
        </param>
        <param>
          <declname>$depth</declname>
        </param>
        <param>
          <declname>$increment_of_depth</declname>
        </param>
        <param>
          <declname>$tree_path</declname>
        </param>
        <param>
          <declname>$possible_loop</declname>
        </param>
        <param>
          <declname>$matched_rows</declname>
        </param>
        <param>
          <declname>$possible_start_of_loop</declname>
        </param>
        <param>
          <declname>$no_loop_skip_test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$origin</parametername>
</parameternamelist>
<parameterdescription>
<para>The root terms cvterm_id. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$child_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The cvterm_id of the current child term. The child term is a descendent of the origin. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$cv_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The controlled vocabulary ID from the cv table of Chado (i.e. cv.cv_id). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$type_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The relationship type between the origin term and the child. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$depth</parametername>
</parameternamelist>
<parameterdescription>
<para>The depth of the recursion. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$increment_of_depth.</parametername>
</parameternamelist>
<parameterdescription>
<para>An integer tailing the number of children that have been walked down. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$tree_path.</parametername>
</parameternamelist>
<parameterdescription>
<para>The array of every term between the current child and the origin. Each element in the array is an associative array with the keys: -build_id: an string identifier for the child that combines the origin, child cvterm_id,cv_id, and the type_id. -depth: the depth that a child was inserted into the cvtermpath table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$possible_loop</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean flag. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$matched_row</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of rows that are currently in the cvtermpath table that match the build_id of the current term trying to be written to the table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$possible_start_of_</parametername>
</parameternamelist>
<parameterdescription>
<para>loop The array of the possible loop item between the current child and the origin. Each element in the array is an associative array with the keys:<itemizedlist>
<listitem><para>cvid : $cv_id</para></listitem><listitem><para>subject_id:</para></listitem><listitem><para>child_id : $child_id,</para></listitem><listitem><para>type_id : $type_id,</para></listitem><listitem><para>depth : $depth, </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$no_loop_skip_test</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean used when the possible loop has been ruled out as a loop. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal_chado/api/modules/tripal_chado.cv.api.inc" line="521" column="1" bodyfile="tripal_chado/api/modules/tripal_chado.cv.api.inc" bodystart="521" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="dc/d32/group__tripal__chado__cv__api_1ga3948642af764cb16aa5e25cf7074624e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_chado_update_cvtermpath_loop_increment</definition>
        <argsstring>( $origin, $child_id, $cv_id, $type_id, $depth, $increment_of_depth, $tree_path, $possible_loop, $matched_rows, &amp;$possible_start_of_loop, $no_loop_skip_test)</argsstring>
        <name>_chado_update_cvtermpath_loop_increment</name>
        <param>
          <declname>$origin</declname>
        </param>
        <param>
          <declname>$child_id</declname>
        </param>
        <param>
          <declname>$cv_id</declname>
        </param>
        <param>
          <declname>$type_id</declname>
        </param>
        <param>
          <declname>$depth</declname>
        </param>
        <param>
          <declname>$increment_of_depth</declname>
        </param>
        <param>
          <declname>$tree_path</declname>
        </param>
        <param>
          <declname>$possible_loop</declname>
        </param>
        <param>
          <declname>$matched_rows</declname>
        </param>
        <param>
          <type>&amp;</type>
          <declname>$possible_start_of_loop</declname>
        </param>
        <param>
          <declname>$no_loop_skip_test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$origin</parametername>
</parameternamelist>
<parameterdescription>
<para>The root terms cvterm_id. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$child_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The cvterm_id of the current child term. The child term is a descendent of the origin. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$cv_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The controlled vocabulary ID from the cv table of Chado (i.e. cv.cv_id). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$type_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The relationship type between the origin term and the child. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$depth</parametername>
</parameternamelist>
<parameterdescription>
<para>The depth of the recursion. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$increment_of_depth.</parametername>
</parameternamelist>
<parameterdescription>
<para>An integer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$tree_path.</parametername>
</parameternamelist>
<parameterdescription>
<para>The array of every term between the current child and the origin. Each element in the array is an associative array with the keys: -build_id: an string identifier for the child that combines the origin, child cvterm_id,cv_id, and the type_id. -depth: the depth that a child was inserted into the cvtermpath table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$possible_loop</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean flag. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$matched_row</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of rows that are currently in the cvtermpath table that match the build_id of the current term trying to be written to the table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$possible_start_of_</parametername>
</parameternamelist>
<parameterdescription>
<para>loop The array of the possible loop item between the current child and the origin. Each element in the array is an associative array with the keys:<itemizedlist>
<listitem><para>cvid : $cv_id</para></listitem><listitem><para>subject_id:</para></listitem><listitem><para>child_id : $child_id,</para></listitem><listitem><para>type_id : $type_id,</para></listitem><listitem><para>depth : $depth, </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$no_loop_skip_test</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean used when the possible loop has been ruled out as a loop. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>multitype: Either a number that represents the row count of existing rows that already match these specification or a Boolean false. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal_chado/api/modules/tripal_chado.cv.api.inc" line="680" column="1" bodyfile="tripal_chado/api/modules/tripal_chado.cv.api.inc" bodystart="680" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="dc/d32/group__tripal__chado__cv__api_1gad719a0176097f3a191626e3d065958a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_chado_update_cvtermpath_root_loop</definition>
        <argsstring>($rootid, $cvid, &amp;$roots)</argsstring>
        <name>_chado_update_cvtermpath_root_loop</name>
        <param>
          <declname>$rootid</declname>
        </param>
        <param>
          <declname>$cvid</declname>
        </param>
        <param>
          <type>&amp;</type>
          <declname>$roots</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Duplicate of _fill_cvtermpath4root() stored procedure in Chado.</para><para>This function process a &quot;branch&quot; of the ontology. Initially, the &quot;root&quot; starts at the top of the tree. But, as the cvtermpath is populated the &quot;root&quot; becomes terms deeper in the tree.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$rootid</parametername>
</parameternamelist>
<parameterdescription>
<para>The term ID from the cvterm table of Chado (i.e. cvterm.cvterm_id). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$cvid</parametername>
</parameternamelist>
<parameterdescription>
<para>The controlled vocabulary ID from the cv table of Chado (i.e. cv.cv_id). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal_chado/api/modules/tripal_chado.cv.api.inc" line="437" column="1" bodyfile="tripal_chado/api/modules/tripal_chado.cv.api.inc" bodystart="437" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="dc/d32/group__tripal__chado__cv__api_1ga721fc931120ef07298e15f4cfd99a749" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>chado_associate_cvterm</definition>
        <argsstring>($basetable, $record_id, $cvterm, $options=array())</argsstring>
        <name>chado_associate_cvterm</name>
        <param>
          <declname>$basetable</declname>
        </param>
        <param>
          <declname>$record_id</declname>
        </param>
        <param>
          <declname>$cvterm</declname>
        </param>
        <param>
          <declname>$options</declname>
          <defval>array()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a record to a cvterm linking table (ie: feature_cvterm).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$basetable</parametername>
</parameternamelist>
<parameterdescription>
<para>The base table to which the cvterm should be linked/associated. Thus to associate a cvterm to a feature the basetable=feature and cvterm_id is added to the feature_cvterm table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$record_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The primary key of the basetable to associate the cvterm with. This should be in integer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$cvterm</parametername>
</parameternamelist>
<parameterdescription>
<para>An associative array describing the cvterm. Valid keys include:<itemizedlist>
<listitem><para>name: the name for the cvterm,</para></listitem><listitem><para>cv_name: the name of the cv the cvterm belongs to.</para></listitem><listitem><para>cv_id: the primary key of the cv the cvterm belongs to. </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$options</parametername>
</parameternamelist>
<parameterdescription>
<para>An associative array of options. Valid keys include:<itemizedlist>
<listitem><para>insert_cvterm: Insert the cvterm if it doesn&apos;t already exist. FALSE is the default. </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal_chado/api/modules/tripal_chado.cv.api.inc" line="1539" column="1" bodyfile="tripal_chado/api/modules/tripal_chado.cv.api.inc" bodystart="1539" bodyend="1630"/>
      </memberdef>
      <memberdef kind="function" id="dc/d32/group__tripal__chado__cv__api_1gaec265761f247752914cacf25fb748226" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>chado_autocomplete_cv</definition>
        <argsstring>($string=&apos;&apos;)</argsstring>
        <name>chado_autocomplete_cv</name>
        <param>
          <declname>$string</declname>
          <defval>&apos;&apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is intended to be used in autocomplete forms.</para><para>This function searches for a matching controlled vobulary name.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$string</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to search for.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A json array of terms that begin with the provided string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal_chado/api/modules/tripal_chado.cv.api.inc" line="1439" column="1" bodyfile="tripal_chado/api/modules/tripal_chado.cv.api.inc" bodystart="1439" bodyend="1454"/>
      </memberdef>
      <memberdef kind="function" id="dc/d32/group__tripal__chado__cv__api_1ga98c6aeb1ed178c8d453c2c582ad07eb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>chado_autocomplete_cvterm</definition>
        <argsstring>($cv_id, $string=&apos;&apos;)</argsstring>
        <name>chado_autocomplete_cvterm</name>
        <param>
          <declname>$cv_id</declname>
        </param>
        <param>
          <declname>$string</declname>
          <defval>&apos;&apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is intended to be used in autocomplete forms for searching for CV terms that begin with the provided string.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$cv_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The CV ID in which to search for the term. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$string</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to search for.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A json array of terms that begin with the provided string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal_chado/api/modules/tripal_chado.cv.api.inc" line="1470" column="1" bodyfile="tripal_chado/api/modules/tripal_chado.cv.api.inc" bodystart="1470" bodyend="1515"/>
      </memberdef>
      <memberdef kind="function" id="dc/d32/group__tripal__chado__cv__api_1gaba12188df5582acf7d92d8be7e1a56bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>chado_get_cv</definition>
        <argsstring>($identifiers, $options=array())</argsstring>
        <name>chado_get_cv</name>
        <param>
          <declname>$identifiers</declname>
        </param>
        <param>
          <declname>$options</declname>
          <defval>array()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a chado controlled vocabulary variable</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>An array with the key stating what the identifier is. Supported keys (only on of the following unique keys is required):<itemizedlist>
<listitem><para>cv_id: the chado cv.cv_id primary key.</para></listitem><listitem><para>name: the chado cv.name field (assume unique). </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$options</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of options. Supported keys include:<itemizedlist>
<listitem><para>Any keys supported by <ref refid="dd/d88/group__tripal__chado__variables__api_1ga6d6af1f6e23e5bbfae0d7867ce09af5a" kindref="member">chado_generate_var()</ref>. See that function definition fot additional details.</para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
NOTE: the $identifier parameter can really be any array similar to $values passed into <ref refid="de/dc4/group__tripal__chado__query__api_1gad84b24dc3ed2e18b053977221f997a35" kindref="member">chado_select_record()</ref>. It should fully specify the cv record to be returned.</para><para><simplesect kind="return"><para>If unique values were passed in as an identifier then an object describing the cv will be returned (will be a chado variable from <ref refid="dd/d88/group__tripal__chado__variables__api_1ga6d6af1f6e23e5bbfae0d7867ce09af5a" kindref="member">chado_generate_var()</ref>). Otherwise, FALSE will be returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal_chado/api/modules/tripal_chado.cv.api.inc" line="47" column="1" bodyfile="tripal_chado/api/modules/tripal_chado.cv.api.inc" bodystart="47" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="dc/d32/group__tripal__chado__cv__api_1ga1842ab73237ff64b4650da0b9ff924ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>chado_get_cv_select_options</definition>
        <argsstring>()</argsstring>
        <name>chado_get_cv_select_options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an options array to be used in a form element which provides a list of all chado cvs.</para><para><simplesect kind="return"><para>An array(cv_id =&gt; name) for each cv in the chado cv table. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal_chado/api/modules/tripal_chado.cv.api.inc" line="128" column="1" bodyfile="tripal_chado/api/modules/tripal_chado.cv.api.inc" bodystart="128" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="dc/d32/group__tripal__chado__cv__api_1ga43188a45bf914732ee69be620419b34c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>chado_get_cvterm</definition>
        <argsstring>($identifiers, $options=array())</argsstring>
        <name>chado_get_cvterm</name>
        <param>
          <declname>$identifiers</declname>
        </param>
        <param>
          <declname>$options</declname>
          <defval>array()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a chado controlled vocabulary term variable.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>An array apropriate for use with the chado_generate_var for uniquely identifying a cvterm record. Alternativley, there are also some specially handled keys. They are:<itemizedlist>
<listitem><para>id: an ID for the term of the for [dbname]:[accession], where [dbname] is the short name of the vocabulary and accession is the unique ID.</para></listitem><listitem><para>cv_id: an integer indicating the cv_id or an array with &apos;name&apos; =&gt; the name of the cv.</para></listitem><listitem><para>synonym: an array with &apos;name&apos; =&gt; the name of the synonym of the cvterm you want returned; &apos;cv_id&apos; =&gt; the cv_id of the synonym; &apos;cv_name&apos; =&gt; the name of the cv of the synonym.</para></listitem><listitem><para>property: An array/object describing the property to select records for. It should at least have either a type_name (if unique across cvs) or type_id. Other supported keys include: cv_id/cv_name (of the type), value and rank. </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$options</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of options. Supported keys include:<itemizedlist>
<listitem><para>Any keys supported by <ref refid="dd/d88/group__tripal__chado__variables__api_1ga6d6af1f6e23e5bbfae0d7867ce09af5a" kindref="member">chado_generate_var()</ref>. See that function definition for additional details.</para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
NOTE: the $identifier parameter can really be any array similar to $values passed into <ref refid="de/dc4/group__tripal__chado__query__api_1gad84b24dc3ed2e18b053977221f997a35" kindref="member">chado_select_record()</ref>. It should fully specify the cvterm record to be returned.</para><para><simplesect kind="return"><para>If unique values were passed in as an identifier then an object describing the cvterm will be returned (will be a chado variable from <ref refid="dd/d88/group__tripal__chado__variables__api_1ga6d6af1f6e23e5bbfae0d7867ce09af5a" kindref="member">chado_generate_var()</ref>). Otherwise, FALSE will be returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal_chado/api/modules/tripal_chado.cv.api.inc" line="177" column="1" bodyfile="tripal_chado/api/modules/tripal_chado.cv.api.inc" bodystart="177" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="dc/d32/group__tripal__chado__cv__api_1gad4bc1edd01eccc9e3a5b7710a7a8222c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>chado_get_cvterm_select_options</definition>
        <argsstring>($cv_id, $rel_type=FALSE)</argsstring>
        <name>chado_get_cvterm_select_options</name>
        <param>
          <declname>$cv_id</declname>
        </param>
        <param>
          <declname>$rel_type</declname>
          <defval>FALSE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an options array to be used in a form element which provides a list of all chado cvterms.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$cv_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The chado cv_id; only cvterms with the supplied cv_id will be returnedl. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$rel_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to TRUE if the terms returned should only be relationship types in the vocabulary. This is useful for creating drop-downs of terms used for relationship linker tables.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An associative array with the cvterm_id&apos;s as keys. The first element in the array has a key of &apos;0&apos; and a value of &apos;Select a Type&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal_chado/api/modules/tripal_chado.cv.api.inc" line="311" column="1" bodyfile="tripal_chado/api/modules/tripal_chado.cv.api.inc" bodystart="311" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="dc/d32/group__tripal__chado__cv__api_1ga57d5cbe502404ade3fbd9b52179216f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>chado_get_obo</definition>
        <argsstring>($values)</argsstring>
        <name>chado_get_obo</name>
        <param>
          <declname>$values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves an OBO record.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$values</parametername>
</parameternamelist>
<parameterdescription>
<para>An associate array with the following allowed keys: obo_id, name.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An instance of an OBO record object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal_chado/api/modules/tripal_chado.cv.api.inc" line="1413" column="1" bodyfile="tripal_chado/api/modules/tripal_chado.cv.api.inc" bodystart="1413" bodyend="1424"/>
      </memberdef>
      <memberdef kind="function" id="dc/d32/group__tripal__chado__cv__api_1ga69ea5153de0b94fea2be37f336523d48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>chado_insert_cv</definition>
        <argsstring>($name, $definition)</argsstring>
        <name>chado_insert_cv</name>
        <param>
          <declname>$name</declname>
        </param>
        <param>
          <declname>$definition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a controlled vocabulary to the CV table of Chado.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the controlled vocabulary. These are typically all lower case with no special characters other than an undrescore (for spaces). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$comment</parametername>
</parameternamelist>
<parameterdescription>
<para>A description or definition of the vocabulary.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An object populated with fields from the newly added database. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal_chado/api/modules/tripal_chado.cv.api.inc" line="851" column="1" bodyfile="tripal_chado/api/modules/tripal_chado.cv.api.inc" bodystart="851" bodyend="884"/>
      </memberdef>
      <memberdef kind="function" id="dc/d32/group__tripal__chado__cv__api_1ga8f63166e7d8232eac68393510ddd6411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>chado_insert_cvterm</definition>
        <argsstring>($term, $options=array())</argsstring>
        <name>chado_insert_cvterm</name>
        <param>
          <declname>$term</declname>
        </param>
        <param>
          <declname>$options</declname>
          <defval>array()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add&apos;s a controlled vocabulary term to Chado.</para><para>This function will add a cvterm record (and a dbxref record if appropriate values are provided). If the parent vocabulary does not exist then that also is added to the cv table. If the cvterm is a relationship term then the &apos;is_relationship&apos; value should be set. All terms must also have a corresponding database. This is specified in the term&apos;s ID just before the colon (e.g. GO:003824). If the database does not exist in the DB table then it will be added automatically. The accession (the value just after the colon in the term&apos;s ID) will be added to the dbxref table. If the CVterm already exists and $update is set (default) then the cvterm is updated. If the CVTerm already exists and $update is not set, then no changes are made and the CVTerm object is returned.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$term</parametername>
</parameternamelist>
<parameterdescription>
<para>An associative array with the following keys:<itemizedlist>
<listitem><para>id: the term accession. must be of the form &lt;DB&gt;:&lt;ACCESSION&gt;, where &lt;DB&gt; is the name of the database to which the cvterm belongs and the &lt;ACCESSION&gt; is the term&apos;s accession number in the database.</para></listitem><listitem><para>name: the name of the term. usually meant to be human-readable.</para></listitem><listitem><para>is_obsolete: is present and set to 1 if the term is defunct.</para></listitem><listitem><para>definition: the definition of the term.</para></listitem><listitem><para>cv_name: The CV name to which the term belongs. If this arugment is null or not provided then the function tries to find a record in the CV table with the same name provided in the $term[namespace]. If this field is provided then it overrides what the value in $term[namespace].</para></listitem><listitem><para>is_relationship: If this term is a relationship term then this value should be 1.</para></listitem><listitem><para>db_name: In some cases the database name will not be part of the $term[&apos;id&apos;] and it needs to be explicitly set. Use this argument only if the database name cannot be specififed in the term ID (e.g. &lt;DB&gt;:&lt;ACCESSION&gt;). </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$options</parametername>
</parameternamelist>
<parameterdescription>
<para>An associative array with the following keys:<itemizedlist>
<listitem><para>update_existing: By default this is TRUE. If the term exists it is automatically updated.</para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A cvterm object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal_chado/api/modules/tripal_chado.cv.api.inc" line="930" column="1" bodyfile="tripal_chado/api/modules/tripal_chado.cv.api.inc" bodystart="930" bodyend="1279"/>
      </memberdef>
      <memberdef kind="function" id="dc/d32/group__tripal__chado__cv__api_1ga9b54aa52cbf3def613366ddc3da17ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>chado_insert_obo</definition>
        <argsstring>($name, $path)</argsstring>
        <name>chado_insert_obo</name>
        <param>
          <declname>$name</declname>
        </param>
        <param>
          <declname>$path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add the OBO to the tripal_cv_obo table in the Drupal database.</para><para>If the OBO name already exists in the table then the path is updated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$name</parametername>
</parameternamelist>
<parameterdescription>
<para>The human readable name of this ontology. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$path</parametername>
</parameternamelist>
<parameterdescription>
<para>The file path or URL of the ontology.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the ontology ID. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal_chado/api/modules/tripal_chado.cv.api.inc" line="1374" column="1" bodyfile="tripal_chado/api/modules/tripal_chado.cv.api.inc" bodystart="1374" bodyend="1400"/>
      </memberdef>
      <memberdef kind="function" id="dc/d32/group__tripal__chado__cv__api_1ga69b904332ab4bdcf7997d7a8d49f2468" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>chado_submit_obo_job</definition>
        <argsstring>($obo)</argsstring>
        <name>chado_submit_obo_job</name>
        <param>
          <declname>$obo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TODO: deprecate this function</para><para>Avoid using this function as it will be deprecated in future releases.</para><para>This function allows other modules to programatically submit an ontology for loading into Chado.</para><para>This function will add a job to the Jobs subsystem for parsing the ontology. You can either pass a known OBO ID to the function or the URL or full path the the ontology file. If a URL or file name is passed then the $obo_name argument must also be provided. If this is the first time the ontology has been provided to Tripal then it will be added to the database and will be assigned a unique OBO ID.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$obo_id</parametername>
</parameternamelist>
<parameterdescription>
<para>If the ontology is already loaded into the Tripal tables then use this argument to specify the unique ID for the ontology that will be loaded. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$obo_name</parametername>
</parameternamelist>
<parameterdescription>
<para>If the OBO has not been added before then use this argument to specify the human readable name of the ontology. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$obo_url</parametername>
</parameternamelist>
<parameterdescription>
<para>If the OBO to be loaded is located on a remote server then use this argument to provide the URL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$obo_file</parametername>
</parameternamelist>
<parameterdescription>
<para>If the OBO is housed on the local file system of the server then use this argument to specify the full path.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>returns the job_id of the submitted job or FALSE if the job was not added </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal_chado/api/modules/tripal_chado.cv.api.inc" line="1317" column="1" bodyfile="tripal_chado/api/modules/tripal_chado.cv.api.inc" bodystart="1317" bodyend="1357"/>
      </memberdef>
      <memberdef kind="function" id="dc/d32/group__tripal__chado__cv__api_1gad2847118b7b3c1df73663875ce081676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>chado_update_cvtermpath</definition>
        <argsstring>($cv_id, $job_id=NULL)</argsstring>
        <name>chado_update_cvtermpath</name>
        <param>
          <declname>$cv_id</declname>
        </param>
        <param>
          <declname>$job_id</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Duplicate of fill_cvtermpath() stored procedure in Chado.</para><para>Identifies all of the root terms of the controlled vocabulary. These root terms are then processed by calling the <ref refid="dc/d32/group__tripal__chado__cv__api_1gad719a0176097f3a191626e3d065958a0" kindref="member">_chado_update_cvtermpath_root_loop()</ref> function on each one.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$cvid</parametername>
</parameternamelist>
<parameterdescription>
<para>The controlled vocabulary ID from the cv table of Chado (i.e. cv.cv_id). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$job_id</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal_chado/api/modules/tripal_chado.cv.api.inc" line="385" column="1" bodyfile="tripal_chado/api/modules/tripal_chado.cv.api.inc" bodystart="385" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="dc/d32/group__tripal__chado__cv__api_1gad5792dae8baa4fccbdd0539b0592f802" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tripal_update_cvtermpath_old</definition>
        <argsstring>($cv_id, $job_id=NULL)</argsstring>
        <name>tripal_update_cvtermpath_old</name>
        <param>
          <declname>$cv_id</declname>
        </param>
        <param>
          <declname>$job_id</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Updates the cvtermpath table of Chado for the specified CV.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$cv_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The chado cv_id. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$job_id</parametername>
</parameternamelist>
<parameterdescription>
<para>This function is intended to be used with the Tripal Jobs API. When this function is called as a job the $job_id is automatically passed to this function. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE on success FALSE on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tripal_chado/api/modules/tripal_chado.cv.api.inc" line="345" column="1" bodyfile="tripal_chado/api/modules/tripal_chado.cv.api.inc" bodystart="345" bodyend="370"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Provides API functions specificially for managing controlled vocabulary records in Chado. Please note that Tripal v3 provides a generic set of API functions for working with controlled vocabularies (CVs). This allows for CVs to be stored using any back-end. By default CV&apos;s continue to be housed in Chado. Therefore, if you are working directly with controlled vocabulary records inside of a Chado-aware module then these functions can be used. </para>    </detaileddescription>
  </compounddef>
</doxygen>
